[
  {
    "id": 1,
    "name": "React Quiz",
    "image": "react-quiz",
    "tech": "React | Material UI | OpenDB API",
    "description": "Quiz feito em React, utilizando Material UI para a estilização de componentes, utilizando também a biblioteca axios para o consumo da API. A API Open Trivia Database utilizada para obtenção de perguntas e respostas. É possível selecionar a categoria e dificuldade das perguntas a serem exibidas, no final é exibido o placar.",
    "link": "https://appquizreact.netlify.app"
  },
  {
    "id": 2,
    "name": "Aluracord",
    "image": "aluracord",
    "tech": "Next Js | Skynexui | Supabase",
    "description": "Página que simula um chat do Discord. Feito em Next Js, utilizando o supabase para simular o backend, possibilitando a troca de mensagens em tempo real e seu armazenamento em um banco de dados. Para acessar basta digitar um nome de usuário do github.",
    "link": "https://aluracord-one.vercel.app"
  },
  {
    "id": 3,
    "name": "Aluraflix",
    "image": "aluraflix",
    "tech": "HTML | CSS | JavaScript",
    "description": "Adicione seus filmes favoritos. Para usar basta digitar, no campo de busca, o nome do filme desejado, feito isso clique em pesquisar, uma lista será apresentada na tela, com os itens de nome similar, selecione o item desejado e ele será adicionado a tela inicial. Há também uma verificação de erros, caso o campo de busca esteja vazio ou o item selecionado já esteja na lista.",
    "link": "https://aluraflixx.netlify.app"
  },
  {
    "id": 4,
    "name": "PokéDex",
    "image": "pokedex",
    "tech": "HTML | CSS | JavaScript | PokeAPI",
    "description": "Projeto de uma pokédex, desenvolvido com a PokeAPI. Para utilizar basta acessar a página e selecionar a opção desejada, é possível escolher entre todos os pokémons ou por geração. Enquanto ocorre a busca de dados e a montagem dos cards, há uma animação de carregamento. Cada card possui imagem, nome, altura, peso e tipo do pokémon correspondente.",
    "link": "https://pokapp.netlify.app"
  },
  {
    "id": 5,
    "name": "Netflix Clone",
    "image": "netflix",
    "tech": "React | CSS | Material UI",
    "description": "Clone da Netflix feito em React, utilizando a API do The movie DB para obtenção dos dados dos filmes e séries. Itens são adicionados dinamicamente a página, responsividade implementada para todos os aparelhos. Item em destque se altera aleatoriamente sempre que a página é recarregada.",
    "link": "https://netflixrc.netlify.app"
  },
  {
    "id": 6,
    "name": "Poké Trunfo",
    "image": "trunfo",
    "tech": "HTML | CSS | JavaScript",
    "description": "Projeto de um jogo, baseado em super trunfo, com a temática Pokémon. No jogo será apresetado um pokémon para o jogador, com os atributos ataque, defesa, ataque especial e defesa especial, selecione um dos atributos e clique em jogar, após isso o pokémon do computador aparecerá na tela e os valores do atributo selecionado pelo jogador serão comparados, o pokémon com o maior atributo, vence.",
    "link": "https://pokemontrunfo.netlify.app"
  },
  {
    "id": 7,
    "name": "AluraGeek",
    "image": "alurageek",
    "tech": "React | CSS | Material UI | Formik",
    "description": "Protótipo de loja com seção de administrador, onde é possível gerenciar os produtos. Formulários de login, envio de mensagem e adicionar produtos são validados utilizando a biblioteca formik. A estilização foi feita utilizando CSS e Material Ui. Produtos são listados buscando dados de uma API criada com Json server que está hospedada no Heroku.",
    "link": "https://alurageek.netlify.app"
  },
  {
    "id": 8,
    "name": "App Clima",
    "image": "clima",
    "tech": "HTML | CSS | JavaScript | OpenWeather API",
    "description": "Aplicação simples de clima, com o consumo da API do open weather para obtenção dos dados em tempo real. Para sua construção foi utilizado HTML, CSS e JavaScript. Para utilizar basta digitar o nome do local desejado e os dados aparecerão na tela.",
    "link": "https://climatual.netlify.app"
  },
  {
    "id": 9,
    "name": "Tabela de Pontuação",
    "image": "pontuacao",
    "tech": "HTML | CSS | JavaScript",
    "description": "Tabela de pontuação para organização de torneios ou campeonatos, projeto também desenvolvido na Imersão Dev da Alura. Críterios de pontos são os utilizados no futebol, com vitória valendo 3 pontos, empate 1 ponto e derrota 0. É possível adicionar vitória, empate e derrota, zerar pontos e remover participantes. Também é verificado se o número de vitórias, empates e derrotas é coerente com o número de participantes.",
    "link": "https://pontuacao.netlify.app"
  },
  {
    "id": 10,
    "name": "Fruit Market",
    "image": "feira",
    "tech": "React | Material UI | StyledComponents",
    "description": "Aplicação de compras, utilizando React, material ui e StyledComponents para a estilização. Consiste em um site para compras de frutas e verduras, simulando uma feira. São realizados cálculos de saldo final, valor total, juros, depedendo da forma de pagamento.",
    "link": "https://feiraapp.netlify.app"
  }
]
